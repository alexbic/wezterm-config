#!/bin/bash

SOURCE_FILE="$1"
TARGET_LANG="$2"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
detect_platform() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"  
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
        echo "windows"
    else
        echo "unknown"
    fi
}

PLATFORM=$(detect_platform)

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sed –¥–ª—è in-place —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cross_platform_sed() {
    local pattern="$1"
    local file="$2"
    
    if [ "$PLATFORM" = "macos" ]; then
        sed -i '' "$pattern" "$file"
    else
        sed -i "$pattern" "$file"
    fi
}

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sed –¥–ª—è –ø–∞–π–ø–æ–≤
cross_platform_sed_pipe() {
    if [ "$PLATFORM" = "macos" ]; then
        sed "$1"
    else
        sed "$1"
    fi
}

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è mktemp
cross_platform_mktemp() {
    if [ "$PLATFORM" = "windows" ]; then
        mktemp -d -t wezterm_locale_XXXXXX
    else
        mktemp -d
    fi
}

if [ -z "$SOURCE_FILE" ] || [ -z "$TARGET_LANG" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <source_file.lua> <target_lang_code>"
    exit 1
fi

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞ (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
SOURCE_LANG=$(grep -m1 'locale' "$SOURCE_FILE" | cross_platform_sed_pipe 's/.*"\([a-z][a-z]\)_.*/\1/')
if [ -z "$SOURCE_LANG" ]; then
  BASENAME=$(basename "$SOURCE_FILE" .lua)
  SOURCE_LANG="${BASENAME:0:2}"
fi

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ locale –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
case "$TARGET_LANG" in
    "en") TARGET_LOCALE="en_US.UTF-8"; TARGET_NAME="English" ;;
    "de") TARGET_LOCALE="de_DE.UTF-8"; TARGET_NAME="German" ;;
    "fr") TARGET_LOCALE="fr_FR.UTF-8"; TARGET_NAME="French" ;;
    "es") TARGET_LOCALE="es_ES.UTF-8"; TARGET_NAME="Spanish" ;;
    "it") TARGET_LOCALE="it_IT.UTF-8"; TARGET_NAME="Italian" ;;
    *) TARGET_LOCALE="${TARGET_LANG}_${TARGET_LANG^^}.UTF-8"; TARGET_NAME="Unknown" ;;
esac

SOURCE_DIR=$(dirname "$SOURCE_FILE")
NEW_FILE="$SOURCE_DIR/${TARGET_LANG}.lua"
TEMP_DIR=$(cross_platform_mktemp)
trap "rm -rf $TEMP_DIR" EXIT

echo "üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ ($PLATFORM): $SOURCE_LANG ‚Üí $TARGET_LANG"
echo "üìä –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."

# –ò–∑–≤–ª–µ–∫–∞–µ–º –í–°–ï –ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ —Å—Ç—Ä–æ–∫–∏ (–∫—Ä–æ–º–µ —Å–ª—É–∂–µ–±–Ω—ã—Ö)
grep -E '^  [a-zA-Z_]+ = ".*",' "$SOURCE_FILE" | \
    grep -v '^  locale = ' | \
    grep -v '^  name = ' > "$TEMP_DIR/translatable_lines.txt"

# –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
awk -F ' = "' '{print $1}' "$TEMP_DIR/translatable_lines.txt" | cross_platform_sed_pipe 's/^  //' > "$TEMP_DIR/keys.txt"
awk -F ' = "' '{print $2}' "$TEMP_DIR/translatable_lines.txt" | cross_platform_sed_pipe 's/",$//' > "$TEMP_DIR/values.txt"

KEY_COUNT=$(wc -l < "$TEMP_DIR/keys.txt")
echo "üéØ –ù–∞–π–¥–µ–Ω–æ: $KEY_COUNT —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞"

# –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
echo "üîÑ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥..."
if trans -brief "$SOURCE_LANG:$TARGET_LANG" -i "$TEMP_DIR/values.txt" > "$TEMP_DIR/translated.txt" 2>/dev/null; then
    echo "‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω"
    
    # –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –æ—Ç –∫–∞–≤—ã—á–µ–∫ (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
    cross_platform_sed 's/^["\x27]*//;s/["\x27]*$//' "$TEMP_DIR/translated.txt"
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    {
        echo "-- $TARGET_NAME localization"
        echo "return {"
        echo "  locale = \"$TARGET_LOCALE\","
        echo "  name = \"$TARGET_NAME\","
        echo ""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        paste "$TEMP_DIR/keys.txt" "$TEMP_DIR/translated.txt" | while IFS=$'\t' read -r key value; do
            echo "  $key = \"$value\","
        done
        
        # –ö–æ–ø–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        grep -E '  (days|months) = \{' "$SOURCE_FILE"
        
        echo "}"
    } > "$NEW_FILE"
    
    echo "‚úÖ –°–æ–∑–¥–∞–Ω: $NEW_FILE"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    if command -v luac >/dev/null 2>&1; then
        if luac -p "$NEW_FILE" 2>/dev/null; then
            echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
        fi
    else
        echo "‚ÑπÔ∏è  luac –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"
fi
