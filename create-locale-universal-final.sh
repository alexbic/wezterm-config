#!/bin/bash

SOURCE_FILE="$1"
TARGET_LANG="$2"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
detect_platform() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"  
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
        echo "windows"
    else
        echo "unknown"
    fi
}

PLATFORM=$(detect_platform)

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sed –¥–ª—è in-place —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cross_platform_sed_inplace() {
    local pattern="$1"
    local file="$2"
    
    if [ "$PLATFORM" = "macos" ]; then
        sed -i '' "$pattern" "$file"
    else
        sed -i "$pattern" "$file"
    fi
}

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sed –¥–ª—è –ø–∞–π–ø–æ–≤
cross_platform_sed_pipe() {
    local pattern="$1"
    sed "$pattern"
}

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
cross_platform_mktemp() {
    if [ "$PLATFORM" = "windows" ]; then
        mktemp -d -t wezterm_locale_XXXXXX
    else
        mktemp -d
    fi
}

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
cross_platform_translate() {
    local source_lang="$1"
    local target_lang="$2"
    local input_file="$3"
    local output_file="$4"
    
    if command -v trans >/dev/null 2>&1; then
        trans -brief "$source_lang:$target_lang" -i "$input_file" > "$output_file" 2>/dev/null
    elif command -v translate >/dev/null 2>&1; then
        translate --from "$source_lang" --to "$target_lang" < "$input_file" > "$output_file" 2>/dev/null
    else
        echo "‚ùå –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ translate-shell"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ -z "$SOURCE_FILE" ] || [ -z "$TARGET_LANG" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <source_file.lua> <target_lang_code>"
    exit 1
fi

# –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
SOURCE_LANG=$(grep -m1 'locale[[:space:]]*=' "$SOURCE_FILE" | cross_platform_sed_pipe -n 's/.*locale[[:space:]]*=[[:space:]]*"\([a-z][a-z]\)_.*/\1/p')
if [ -z "$SOURCE_LANG" ]; then
  BASENAME=$(basename "$SOURCE_FILE" .lua)
  SOURCE_LANG="${BASENAME:0:2}"
fi

echo "üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ ($PLATFORM): $SOURCE_LANG ‚Üí $TARGET_LANG"

# –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ locale –∏ –Ω–∞–∑–≤–∞–Ω–∏–π
case "$TARGET_LANG" in
    "en") TARGET_LOCALE="en_US.UTF-8"; TARGET_NAME="English" ;;
    "de") TARGET_LOCALE="de_DE.UTF-8"; TARGET_NAME="German" ;;
    "fr") TARGET_LOCALE="fr_FR.UTF-8"; TARGET_NAME="French" ;;
    "es") TARGET_LOCALE="es_ES.UTF-8"; TARGET_NAME="Spanish" ;;
    "it") TARGET_LOCALE="it_IT.UTF-8"; TARGET_NAME="Italian" ;;
    "pt") TARGET_LOCALE="pt_PT.UTF-8"; TARGET_NAME="Portuguese" ;;
    *) 
        local lang_upper=$(echo "$TARGET_LANG" | tr '[:lower:]' '[:upper:]')
        TARGET_LOCALE="${TARGET_LANG}_${lang_upper}.UTF-8"
        TARGET_NAME="Unknown"
        ;;
esac

# –ü—É—Ç–∏
SOURCE_DIR=$(dirname "$SOURCE_FILE")
NEW_FILE="$SOURCE_DIR/${TARGET_LANG}.lua"

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
TEMP_DIR=$(cross_platform_mktemp)
trap "rm -rf $TEMP_DIR" EXIT

# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
echo "üìä –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
grep -E '^  [a-zA-Z_]+ = ' "$SOURCE_FILE" | \
    grep -v '^  locale = ' | \
    grep -v '^  name = "' > "$TEMP_DIR/all_lines.txt"

# –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
awk -F ' = ' '{print $1}' "$TEMP_DIR/all_lines.txt" | cross_platform_sed_pipe 's/^  //' > "$TEMP_DIR/keys.txt"
cross_platform_sed_pipe 's/^[^=]*= //;s/,$//' "$TEMP_DIR/all_lines.txt" > "$TEMP_DIR/values.txt"

KEY_COUNT=$(wc -l < "$TEMP_DIR/keys.txt")
echo "üéØ –ù–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: $KEY_COUNT —ç–ª–µ–º–µ–Ω—Ç–æ–≤"

# –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
echo "üîÑ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥..."
if cross_platform_translate "$SOURCE_LANG" "$TARGET_LANG" "$TEMP_DIR/values.txt" "$TEMP_DIR/translated.txt"; then
    echo "‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω"

    # –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –í–°–ï–• –ö–ê–í–´–ß–ï–ö (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ)
    cross_platform_sed_inplace 's/^["\x27‚Äû""¬´¬ª][[:space:]]*//' "$TEMP_DIR/translated.txt"
    cross_platform_sed_inplace 's/[[:space:]]*["\x27""¬´¬ª]$//' "$TEMP_DIR/translated.txt"
    cross_platform_sed_inplace 's/[[:space:]]*$//' "$TEMP_DIR/translated.txt"

    # –°–æ–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥—ë–Ω–Ω—ã–µ –∫–ª—é—á–∏
    paste "$TEMP_DIR/keys.txt" "$TEMP_DIR/translated.txt" | while IFS=$'\t' read -r key value; do
        # –û—á–∏—â–∞–µ–º value –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤
        value=$(echo "$value" | cross_platform_sed_pipe 's/^[[:space:]]*//;s/[[:space:]]*$//')

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è
        if [[ "$value" =~ ^\{.*\}$ ]]; then
            # –ú–∞—Å—Å–∏–≤ - –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
            echo "  $key = $value,"
        else
            # –°—Ç—Ä–æ–∫–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
            echo "  $key = \"$value\","
        fi
    done > "$TEMP_DIR/content.txt"

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    {
        echo "-- $TARGET_NAME localization"
        echo "return {"
        echo "  locale = \"$TARGET_LOCALE\","
        echo "  name = \"$TARGET_NAME\","
        echo ""
        cat "$TEMP_DIR/content.txt"
        echo "}"
    } > "$NEW_FILE"

    echo "‚úÖ –°–æ–∑–¥–∞–Ω: $NEW_FILE"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ (–µ—Å–ª–∏ lua –¥–æ—Å—Ç—É–ø–Ω–∞)
    if command -v luac >/dev/null 2>&1; then
        if luac -p "$NEW_FILE" 2>/dev/null; then
            echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
        fi
    else
        echo "‚ÑπÔ∏è  luac –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"
fi
