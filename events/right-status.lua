-- cat > ~/.config/wezterm/events/right-status.lua << 'EOF'
--
-- –û–ü–ò–°–ê–ù–ò–ï: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
-- –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤–∫–ª—é—á–∞—è 
-- —Å—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞, —á–∞—Å—ã, –¥–∞—Ç—É, –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –¥—Ä.
-- –î–û–ë–ê–í–õ–ï–ù–û: –í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è copy_mode —á–µ—Ä–µ–∑ —Ç–æ–ª—Å—Ç—É—é –æ—Ä–∞–Ω–∂–µ–≤—É—é —Ä–∞–º–∫—É
--
-- –ó–ê–í–ò–°–ò–ú–û–°–¢–ò: events.session-status, utils.debug

local debug = require("utils.debug")
local wezterm = require('wezterm')
local session_status = require('events.session-status')

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
local platform = nil
local cached_date_lang = nil
local last_active_key_table = nil
local locale_initialized = false

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–Ω–µ–π –∏ –º–µ—Å—è—Ü–µ–≤ –∏–∑ locale
local function get_localized_strings(lang)
  local environment = require('config.environment')
  local l = environment.locale.get_language_table(lang)
  return {
    days = l.days or {},
    months = l.months or {},
  }
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
local function get_localized_date()
  local lang = cached_date_lang or platform.language

  if not cached_date_lang or cached_date_lang ~= lang then
    cached_date_lang = lang
    wezterm.log_info("–Ø–∑—ã–∫ –¥–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: " .. lang .. " (" .. platform.locale .. ")")
  end

  local day_of_week = tonumber(wezterm.strftime("%w"))
  local day_of_month = wezterm.strftime("%d")
  local month_num = tonumber(wezterm.strftime("%m")) - 1

  local strings = get_localized_strings(lang)
  if #strings.days > 0 and #strings.months > 0 then
    local day_name = strings.days[day_of_week + 1]
    local month_name = strings.months[month_num + 1]
    return day_name .. ", " .. day_of_month .. " " .. month_name
  else
    return wezterm.strftime("%a, %d %b")
  end
end

local M = {}

M.setup = function()
  -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º platform –≤–Ω—É—Ç—Ä–∏ setup
  local create_platform_info = require('utils.platform')
  platform = create_platform_info(wezterm.target_triple)
  
  if not locale_initialized then
    platform:refresh_locale()
    locale_initialized = true
    
    wezterm.log_info("=== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –õ–û–ö–ê–õ–ò ===")
    wezterm.log_info("–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: " .. (platform.is_mac and "macOS" or platform.is_win and "Windows" or platform.is_linux and "Linux" or "Unknown"))
    wezterm.log_info("–ò—Ç–æ–≥–æ–≤–∞—è –ª–æ–∫–∞–ª—å: " .. platform.locale)
    wezterm.log_info("–ò—Ç–æ–≥–æ–≤—ã–π —è–∑—ã–∫: " .. platform.language)
    wezterm.log_info("=== –ö–û–ù–ï–¶ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò ===")
  end

  -- üö™ –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö: –í—ã—Ö–æ–¥ –∏–∑ copy_mode –ø–æ Escape
  wezterm.on('exit-copy-mode', function(window, pane)
    wezterm.log_info("üö™ –í—ã—Ö–æ–¥ –∏–∑ copy_mode –ø–æ Escape")
    if window then
      -- –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
      local overrides = window:get_config_overrides() or {}
      overrides.window_frame = {
        border_left_width = '0px',
        border_right_width = '0px',
        border_bottom_height = '0px', 
        border_top_height = '0px',
      }
      window:set_config_overrides(overrides)
      
      -- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ copy_mode
      window:perform_action(wezterm.action.PopKeyTable, pane)
    end
  end)

  -- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  wezterm.on('update-right-status', function(window, pane)
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ–∫–Ω–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∫ –Ω–µ–º—É
    if not window or window == nil then return end
    local ok, current_key_table = pcall(function() return window:active_key_table() end)
    if not ok then return end
    
    -- üñºÔ∏è –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ö–û–î: –ü—Ä–æ–≤–µ—Ä—è–µ–º copy_mode –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–°–¢–£–Æ –û–†–ê–ù–ñ–ï–í–£–Æ —Ä–∞–º–∫—É
    local copy_mode_active = (current_key_table == 'copy_mode')
    local overrides = window:get_config_overrides() or {}
    
    if copy_mode_active then
      -- COPY MODE: –¥–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–°–¢–£–Æ –Ø–†–ö–£–Æ –û–†–ê–ù–ñ–ï–í–£–Æ —Ä–∞–º–∫—É
      overrides.window_frame = {
        border_left_width = '6px',       -- –£–≤–µ–ª–∏—á–∏–ª —Å 2px –¥–æ 6px
        border_right_width = '6px', 
        border_bottom_height = '6px',
        border_top_height = '6px',
        border_left_color = '#FF8C00',   -- –Ø—Ä–∫–∏–π –æ—Ä–∞–Ω–∂–µ–≤—ã–π (DarkOrange)
        border_right_color = '#FF8C00',
        border_bottom_color = '#FF8C00', 
        border_top_color = '#FF8C00',
      }
      wezterm.log_info("üñºÔ∏è COPY MODE: —Ç–æ–ª—Å—Ç–∞—è –æ—Ä–∞–Ω–∂–µ–≤–∞—è —Ä–∞–º–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
    else
      -- –û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú: —É–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É
      overrides.window_frame = {
        border_left_width = '0px',
        border_right_width = '0px',
        border_bottom_width = '0px', 
        border_top_height = '0px',
      }
    end
    
    window:set_config_overrides(overrides)
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∂–∏–º –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
    if current_key_table ~= last_active_key_table then
      if current_key_table then
        session_status.set_mode(current_key_table)
        wezterm.log_info("üéØ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –∫–ª–∞–≤–∏—à: " .. current_key_table)
      else
        -- –í–ê–ñ–ù–û: –ù–ï –æ—á–∏—â–∞–µ–º saved_mode –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ key table
        -- –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ current_mode
        wezterm.log_info("üö® RIGHT-STATUS: –≤—ã—Ö–æ–¥ –∏–∑ key table, –æ—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ current_mode")
        session_status.clear_mode()
        wezterm.log_info("üéØ –¢–∞–±–ª–∏—Ü–∞ –∫–ª–∞–≤–∏—à –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
      end
      last_active_key_table = current_key_table
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–π
    local status_elements = session_status.get_status_elements()
    
    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    local time = wezterm.strftime("%H:%M:%S")
    local date = get_localized_date()
    local calendar_icon = "üìÖ"
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    local display_elements = {}
    
    -- –ü–û–†–Ø–î–û–ö: [–∞–Ω–∏–º–∞—Ü–∏—è] [—Ä–µ–∂–∏–º] [—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ] | üìÖ –¥–∞—Ç–∞ –≤—Ä–µ–º—è
    
    local has_mode_elements = false
    
    -- 1. –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ (—Å–∞–º—ã–π –ª–µ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç)
    for _, element in ipairs(status_elements) do
      if element.type == "loading" then
        table.insert(display_elements, { Foreground = { Color = element.color } })
        table.insert(display_elements, { Text = element.icon .. " " })
        has_mode_elements = true
        break
      end
    end
    
    -- 2. –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∂–∏–º (—Å–ø—Ä–∞–≤–∞ –æ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏)
    for _, element in ipairs(status_elements) do
      if element.type == "mode" then
        table.insert(display_elements, { Foreground = { Color = element.color } })
        table.insert(display_elements, { Foreground = { Color = "#666666" } })
        table.insert(display_elements, { Text = "| " })
        table.insert(display_elements, { Foreground = { Color = element.color } })
        table.insert(display_elements, { Text = element.icon .. " " })
        has_mode_elements = true
        break
      end
    end
    
    -- 3. –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö (—Å–ø—Ä–∞–≤–∞ –æ—Ç —Ä–µ–∂–∏–º–∞)
    for _, element in ipairs(status_elements) do
      if element.type == "notification" then
        table.insert(display_elements, { Foreground = { Color = element.color } })
        table.insert(display_elements, { Text = element.icon .. " " })
        table.insert(display_elements, { Foreground = { Color = "#FFFFFF" } })
        table.insert(display_elements, { Text = element.text .. " " })
        has_mode_elements = true
        break
      end
    end
    
    -- 4. –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –µ—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∂–∏–º–∞
    if has_mode_elements then
      table.insert(display_elements, { Foreground = { Color = "#666666" } })
      table.insert(display_elements, { Text = "| " })
    end
    
    -- 5. –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É (–±–µ–∑ –∏–∫–æ–Ω–∫–∏)
    table.insert(display_elements, { Background = { Color = "#313244" } })
    table.insert(display_elements, { Foreground = { Color = '#BD93F9' } })
    table.insert(display_elements, { Foreground = { Color = '#BD93F9' } })
    table.insert(display_elements, { Text = date .. " " })
    table.insert(display_elements, { Foreground = { Color = '#F8F8F2' } })
    table.insert(display_elements, { Text = time })
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    window:set_right_status(wezterm.format(display_elements))
    
    -- –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    for i, element in ipairs(status_elements) do
      debug.log("session_status", "debug_status_element", i, element.type, (element.text or element.icon))
    end
  end)
  
  -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
  wezterm.on('force-update-status', function(window, pane)
    wezterm.log_info("–°–æ–±—ã—Ç–∏–µ force-update-status")
    
    if window then
      window:set_right_status("")
      cached_date_lang = nil
      last_active_key_table = nil
      session_status.clear_all_modes() -- –û—á–∏—â–∞–µ–º –í–°–ï —Ä–µ–∂–∏–º—ã
      wezterm.emit('update-right-status', window, pane)
    end
  end)
  
  -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  wezterm.on('window-config-reloaded', function(window, pane)
    cached_date_lang = nil
    last_active_key_table = nil
    session_status.clear_all_modes() -- –û—á–∏—â–∞–µ–º –í–°–ï —Ä–µ–∂–∏–º—ã –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ
    
    local success_msg = wezterm.format({
      {Foreground = {Color = "#00FF00"}},
      {Text = "‚úì "},
      {Foreground = {Color = "#FFFFFF"}},
      {Text = "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"}
    })
    
    window:set_right_status(success_msg)
    
    wezterm.time.call_after(3, function()
      if window then
        window:set_right_status("")
        window:perform_action(
          wezterm.action.EmitEvent("force-update-status"),
          nil
        )
      end
    end)
  end)
end

return M
