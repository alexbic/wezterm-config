local wezterm = require('wezterm')

local function register_workspace_events()
  wezterm.on('workspace.switch', function(window, pane)
    local workspace_switcher = require('config.workspace-switcher')
    window:perform_action(workspace_switcher.workspace_switcher.switch_workspace(), pane)
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)  end)
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ù–ï –∞–∫—Ç–∏–≤–Ω—ã–π workspace
    local active_workspaces = {}
    for _, ws in ipairs(wezterm.mux.get_workspace_names()) do
      active_workspaces[ws] = true
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)    end
    
    local file = io.open(workspace_file, "r")
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ workspace —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ò –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π workspace: " .. workspace)
      wezterm.time.call_after(0.2, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)        end
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)      end)
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)    end
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)  end)
  
  -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
  wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace)
    local paths = require("config.environment.paths")
    local workspace_file = paths.resurrect_state_dir .. "workspace/" .. workspace .. ".json"
    local file = io.open(workspace_file, "r")
    if file then
      file:close()
      wezterm.log_info("üéØ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: " .. workspace)
      -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
      wezterm.time.call_after(0.1, function()
        local resurrect = require("config.resurrect").resurrect
        local state = resurrect.state_manager.load_state(workspace, "workspace")
        if state then
          resurrect.workspace_state.restore_workspace(state, {relative = false})
        end
      end)
    end
  end)end

return register_workspace_events
