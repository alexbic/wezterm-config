-- –û–ü–ò–°–ê–ù–ò–ï: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π workspace –º–µ–Ω–µ–¥–∂–µ—Ä —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π smart_workspace_switcher
-- –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤–∞—à session-status —Å –Ω–æ–≤—ã–º –ø–ª–∞–≥–∏–Ω–æ–º –¥–ª—è –ª—É—á—à–µ–≥–æ UX

local wezterm = require('wezterm')
local session_status = require('events.session-status')
local M = {}

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤
local workspace_switcher = wezterm.plugin.require("https://github.com/MLFlexer/smart_workspace_switcher.wezterm")
local resurrect = wezterm.plugin.require("https://github.com/MLFlexer/resurrect.wezterm")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
M.config = {
  zoxide_path = "/opt/homebrew/bin/zoxide",
  auto_save_on_switch = true,
  session_prefix = "ws_",
  show_workspace_in_status = true,
}

-- –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local current_operation = nil
local workspace_history = {}

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤
workspace_switcher.zoxide_path = M.config.zoxide_path

-- –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è formatter –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
workspace_switcher.workspace_formatter = function(label)
  return wezterm.format({
    { Attribute = { Italic = false } },
    { Foreground = { Color = "#50fa7b" } },
    { Background = { Color = "#282a36" } },
    { Text = "Û±Ç¨ " .. label },
  })
end

-- === –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

-- –£–º–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ workspace —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤–∞—à–µ–≥–æ session-status
M.smart_switch_workspace = function()
  return wezterm.action_callback(function(window, pane)
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ workspace (–∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–æ–π)
    session_status.set_mode("workspace_search")
    current_operation = "switch"
    
    -- –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ workspace –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if M.config.auto_save_on_switch then
      local current_ws = window:active_workspace()
      M.auto_save_workspace(current_ws, window)
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º smart_workspace_switcher
    window:perform_action(workspace_switcher.switch_workspace(), pane)
  end)
end

-- –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ workspace —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
M.auto_save_workspace = function(workspace_name, window)
  if not workspace_name or workspace_name == "" then return end
  
  -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  session_status.start_loading(window)
  
  local session_name = M.config.session_prefix .. workspace_name .. "_auto_" .. os.date("%H%M")
  
  wezterm.time.call_after(0.3, function()
    local state = resurrect.workspace_state.get_workspace_state()
    if state then
      resurrect.state_manager.save_state(state, session_name)
      -- –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ loading)
      wezterm.time.call_after(1, function()
        session_status.stop_loading(window)
      end)
    else
      session_status.save_session_error(window, "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    end
  end)
end

-- –†—É—á–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ workspace
M.save_workspace = function()
  return wezterm.action_callback(function(window, pane)
    session_status.set_mode("session_control")
    
    local workspace_name = window:active_workspace()
    
    window:perform_action(
      wezterm.action.PromptInputLine({
        description = "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å workspace '" .. workspace_name .. "' –∫–∞–∫:",
        action = wezterm.action_callback(function(inner_window, inner_pane, line)
          if line and line ~= "" then
            session_status.start_loading(window)
            
            local session_name = M.config.session_prefix .. workspace_name .. "_" .. line
            
            wezterm.time.call_after(0.2, function()
              local state = resurrect.workspace_state.get_workspace_state()
              if state then
                resurrect.state_manager.save_state(state, session_name)
                session_status.save_session_success(window, line)
              else
                session_status.save_session_error(window, "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
              end
            end)
          else
            session_status.clear_saved_mode()
          end
        end),
      }),
      pane
    )
  end)
end

-- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π workspace
M.switch_to_previous = function()
  return wezterm.action_callback(function(window, pane)
    session_status.set_mode("workspace_search")
    
    wezterm.time.call_after(0.2, function()
      window:perform_action(workspace_switcher.switch_to_prev_workspace(), pane)
    end)
  end)
end

-- –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö workspace
M.show_workspace_launcher = function()
  return wezterm.action_callback(function(window, pane)
    session_status.set_mode("workspace_search")
    
    wezterm.time.call_after(0.1, function()
      window:perform_action(
        wezterm.action.ShowLauncherArgs({ 
          flags = "FUZZY|WORKSPACES",
          title = "üè† –í—ã–±–µ—Ä–∏—Ç–µ workspace"
        }), 
        pane
      )
    end)
  end)
end

-- === –°–û–ë–´–¢–ò–Ø (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–æ–π) ===

M.setup_events = function()
  -- –°–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ workspace
  wezterm.on('smart_workspace_switcher.workspace_switcher.start', function(window)
    wezterm.log_info("üîç Workspace switcher –∑–∞–ø—É—â–µ–Ω")
    -- –í–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∂–∏–º, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
  end)
  
  -- –°–æ–±—ã—Ç–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–∏—Å–∫–∞
  wezterm.on('smart_workspace_switcher.workspace_switcher.canceled', function(window)
    wezterm.log_info("‚ùå Workspace switcher –æ—Ç–º–µ–Ω–µ–Ω")
    if current_operation then
      session_status.clear_saved_mode() -- –û—á–∏—â–∞–µ–º —Ä–µ–∂–∏–º –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
      current_operation = nil
    end
  end)
  
  -- –°–æ–±—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ workspace
  wezterm.on('smart_workspace_switcher.workspace_switcher.selected', function(window, workspace)
    wezterm.log_info("üëÜ Workspace –≤—ã–±—Ä–∞–Ω: " .. workspace)
    -- –ú–æ–∂–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
  end)
  
  -- –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π workspace
  wezterm.on('smart_workspace_switcher.workspace_switcher.chosen', function(window, workspace)
    local workspace_name = workspace:match("([^/]+)$") or workspace
    wezterm.log_info("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ workspace: " .. workspace_name)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    table.insert(workspace_history, 1, workspace_name)
    if #workspace_history > 10 then
      table.remove(workspace_history)
    end
    
    -- –û—á–∏—â–∞–µ–º —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    if current_operation == "switch" then
      wezterm.time.call_after(0.5, function()
        session_status.clear_saved_mode()
        current_operation = nil
      end)
    end
  end)
  
  -- –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ workspace
  wezterm.on('smart_workspace_switcher.workspace_switcher.created', function(window, workspace)
    local workspace_name = workspace:match("([^/]+)$") or workspace
    wezterm.log_info("üÜï –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π workspace: " .. workspace_name)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    table.insert(workspace_history, 1, workspace_name)
    
    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏
    wezterm.time.call_after(0.5, function()
      session_status.show_notification(window, "–°–æ–∑–¥–∞–Ω: " .. workspace_name, "üÜï", "#50fa7b", 2000, true)
      current_operation = nil
    end)
  end)
  
  -- –°–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π workspace
  wezterm.on('smart_workspace_switcher.workspace_switcher.switched_to_prev', function(window)
    wezterm.log_info("‚è™ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π workspace")
    
    wezterm.time.call_after(0.3, function()
      session_status.clear_saved_mode()
      current_operation = nil
    end)
  end)
  
  -- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–æ–π —Å—Ç–∞—Ç—É—Å–∞ - –ø–æ–∫–∞–∑ —Ç–µ–∫—É—â–µ–≥–æ workspace
  if M.config.show_workspace_in_status then
    -- –†–∞—Å—à–∏—Ä—è–µ–º –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é get_status_elements
    local original_get_status = session_status.get_status_elements
    session_status.get_status_elements = function()
      local elements = original_get_status()
      
      -- –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π workspace
      local has_active_mode = false
      for _, element in ipairs(elements) do
        if element.type == "mode" or element.type == "loading" then
          has_active_mode = true
          break
        end
      end
      
      if not has_active_mode then
        local workspace = wezterm.mux and wezterm.mux.get_active_workspace() or "default"
        local base_name = workspace:match("([^/]+)$") or workspace
        
        table.insert(elements, {
          type = "mode",
          icon = "Û±Ç¨",
          text = base_name,
          color = "#6272a4"
        })
      end
      
      return elements
    end
  end
end

-- === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

M.setup = function(user_config)
  if user_config then
    for k, v in pairs(user_config) do
      M.config[k] = v
    end
  end
  
  workspace_switcher.zoxide_path = M.config.zoxide_path
  M.setup_events()
  
  wezterm.log_info("üöÄ Workspace Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π session-status")
  return M
end

return M
