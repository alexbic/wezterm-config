local wezterm = require('wezterm')
local M = {}

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ Smart Workspace Switcher
local workspace_switcher = wezterm.plugin.require("https://github.com/MLFlexer/smart_workspace_switcher.wezterm")
M.workspace_switcher = workspace_switcher

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–∏ –∫ zoxide –¥–ª—è macOS
workspace_switcher.zoxide_path = "/opt/homebrew/bin/zoxide"

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace —Å resurrect
local function get_resurrect_workspaces()
 local saved = {}
 local paths = require("config.environment.paths")
 local workspace_dir = paths.resurrect_state_dir .. "workspace"

 -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
 local platform = require('utils.platform')()
 if not platform.directory_exists(workspace_dir) then
   wezterm.log_info("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è workspace –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: " .. workspace_dir)
   return saved
 end

 -- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
 local files = platform.get_files_in_directory(workspace_dir, "*.json")

 for _, file_path in ipairs(files) do
   local name = file_path:match("([^/\\]+)%.json$")
   if name then
     -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –∏ –º–æ–∂–µ–º –ª–∏ –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å
     if platform.file_exists(file_path) then
       table.insert(saved, {
         id = name,
         label = "üíæ " .. name,
         path = workspace_dir  -- –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å zoxide
       })
     end
   end
 end

 wezterm.log_info("–ù–∞–π–¥–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö workspace: " .. #saved)
 return saved
end

-- –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è choices —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π resurrect
workspace_switcher.get_choices = function(opts)
 opts = opts or {}

 -- –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ workspace –∏ zoxide —ç–ª–µ–º–µ–Ω—Ç—ã
 local workspace_elements = workspace_switcher.choices.get_workspace_elements({})
 local zoxide_elements = workspace_switcher.choices.get_zoxide_elements({}, opts)

 -- –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ workspace –∏–∑ resurrect
 local saved_workspaces = get_resurrect_workspaces()

 -- –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
 local all_choices = {}

 -- –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ workspace (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
 for _, element in ipairs(workspace_elements) do
   table.insert(all_choices, element)
 end

 -- –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ workspace
 for _, element in ipairs(saved_workspaces) do
   table.insert(all_choices, element)
 end

 -- –î–æ–±–∞–≤–ª—è–µ–º zoxide —ç–ª–µ–º–µ–Ω—Ç—ã
 for _, element in ipairs(zoxide_elements) do
   table.insert(all_choices, element)
 end

 return all_choices
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è workspace –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ
wezterm.on("smart_workspace_switcher.workspace_switcher.chosen", function(window, workspace, label)
 wezterm.log_info("–í—ã–±—Ä–∞–Ω workspace: " .. workspace .. ", label: " .. (label or "–Ω–µ—Ç"))

 -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π workspace (–ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É üíæ)
 if label and label:match("^üíæ ") then
   local name = label:match("^üíæ (.+)$")
   wezterm.log_info("–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π workspace: " .. name)

   -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   local resurrect = require("config.resurrect").resurrect
   local state = resurrect.state_manager.load_state(name, "workspace")

   if state then
     -- –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ workspace –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
     window:perform_action(wezterm.action.SwitchToWorkspace({ name = name }), window:active_pane())

     -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è workspace
     wezterm.time.call_after(0.2, function()
       resurrect.workspace_state.restore_workspace(state, {
         window = window:mux_window(),
         relative = true,
         restore_text = true,
         on_pane_restore = resurrect.tab_state.default_on_pane_restore,
       })
       wezterm.log_info("Workspace " .. name .. " –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
     end)
   else
     wezterm.log_warn("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è workspace: " .. name)
   end
 end
end)

return M
