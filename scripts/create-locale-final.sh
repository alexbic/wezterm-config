#!/bin/bash

SOURCE_FILE="$1"
TARGET_LANG="$2"

if [ -z "$SOURCE_FILE" ] || [ -z "$TARGET_LANG" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <source_file.lua> <target_lang_code>"
    exit 1
fi

# –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞
SOURCE_LANG=$(grep -m1 'locale\s*=' "$SOURCE_FILE" | sed -n 's/.*locale\s*=\s*"\([a-z][a-z]\)_.*/\1/p')
if [ -z "$SOURCE_LANG" ]; then
  BASENAME=$(basename "$SOURCE_FILE" .lua)
  SOURCE_LANG="${BASENAME:0:2}"
fi

echo "üåê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥: $SOURCE_LANG ‚Üí $TARGET_LANG"

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ locale
TARGET_LOCALE=$(locale -a 2>/dev/null | grep -i "^${TARGET_LANG}_" | head -1)
[ -z "$TARGET_LOCALE" ] && TARGET_LOCALE="${TARGET_LANG}_${TARGET_LANG^^}.UTF-8"

# –ü—É—Ç–∏
SOURCE_DIR=$(dirname "$SOURCE_FILE")
NEW_FILE="$SOURCE_DIR/${TARGET_LANG}.lua"
TEMPLATE="$SOURCE_DIR/template.lua"

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
echo "üìä –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
grep -E '^  [a-zA-Z_]+ = ' "$SOURCE_FILE" | \
    grep -v '^  locale = ' | \
    grep -v '^  name = "' > "$TEMP_DIR/all_lines.txt"

# –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è
awk -F ' = ' '{print $1}' "$TEMP_DIR/all_lines.txt" | sed 's/^  //' > "$TEMP_DIR/keys.txt"
sed 's/^[^=]*= //' "$TEMP_DIR/all_lines.txt" | sed 's/,$//' > "$TEMP_DIR/values.txt"

KEY_COUNT=$(wc -l < "$TEMP_DIR/keys.txt")
echo "üéØ –ù–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: $KEY_COUNT —ç–ª–µ–º–µ–Ω—Ç–æ–≤"

# –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
echo "üîÑ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥..."
if trans -brief "$SOURCE_LANG:$TARGET_LANG" -i "$TEMP_DIR/values.txt" > "$TEMP_DIR/translated.txt" 2>/dev/null; then
    echo "‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω"

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ (—Å –æ—á–∏—Å—Ç–∫–æ–π –æ—Ç –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫)
    TARGET_NAME_LINE=$(grep '^  name = ' "$SOURCE_FILE" | sed 's/.*= "\(.*\)".*/\1/')
    TARGET_NAME=$(echo "$TARGET_NAME_LINE" | trans -brief "$SOURCE_LANG:$TARGET_LANG" 2>/dev/null | tr -d '\n\r' || echo "$TARGET_LANG")

    # –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
    sed -i '' 's/[[:space:]]*$//' "$TEMP_DIR/translated.txt"

    # –°–æ–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏
    paste "$TEMP_DIR/keys.txt" "$TEMP_DIR/translated.txt" | while IFS=$'\t' read -r key value; do
        # –û—á–∏—â–∞–µ–º value –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
        value=$(echo "$value" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è
        if [[ "$value" =~ ^\{.*\}$ ]]; then
            # –≠—Ç–æ –º–∞—Å—Å–∏–≤
            echo "  $key = $value,"
        else
            # –≠—Ç–æ —Å—Ç—Ä–æ–∫–∞ - —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏
            escaped=$(echo "$value" | sed 's/"/\\"/g')
            echo "  $key = \"$escaped\","
        fi
    done > "$TEMP_DIR/content.txt"

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    if [ -f "$TEMPLATE" ]; then
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º template.lua —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–º–µ–Ω–æ–π
        cp "$TEMPLATE" "$TEMP_DIR/output.lua"
        # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –ø–æ –æ–¥–Ω–æ–º—É
        sed -i '' "s/{{LANGUAGE_NAME}}/$TARGET_NAME/g" "$TEMP_DIR/output.lua"
        sed -i '' "s/{{LOCALE_CODE}}/$TARGET_LOCALE/g" "$TEMP_DIR/output.lua"
        # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        sed -i '' "/{{TRANSLATED_KEYS}}/r $TEMP_DIR/content.txt" "$TEMP_DIR/output.lua"
        sed -i '' "/{{TRANSLATED_KEYS}}/d" "$TEMP_DIR/output.lua"
        cp "$TEMP_DIR/output.lua" "$NEW_FILE"
    else
        # –ë–µ–∑ —à–∞–±–ª–æ–Ω–∞
        {
            echo "-- $TARGET_LANG localization"
            echo "return {"
            echo "  locale = \"$TARGET_LOCALE\","
            echo "  name = \"$TARGET_NAME\","
            echo ""
            cat "$TEMP_DIR/content.txt"
            echo "}"
        } > "$NEW_FILE"
    fi

    echo "‚úÖ –°–æ–∑–¥–∞–Ω: $NEW_FILE"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    if luac -p "$NEW_FILE" 2>/dev/null; then
        echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"
fi

