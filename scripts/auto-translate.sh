#!/bin/bash

# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ Translate Shell
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞: macOS, Linux, Windows (WSL/MSYS2/Cygwin)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./auto-translate.sh <lang_file> <target_lang> [-v]

LANG_FILE="$1"
TARGET_LANG="$2"
VERBOSE=""

for arg in "$@"; do
    case $arg in
        -v|--verbose)
            VERBOSE="true"
            ;;
    esac
done

if [ -z "$LANG_FILE" ] || [ -z "$TARGET_LANG" ] || [ ! -f "$LANG_FILE" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <lang_file> <target_lang> [-v]"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
detect_platform() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
        echo "windows"
    else
        echo "unknown"
    fi
}

# –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ Translate Shell
install_translate_shell() {
    local platform="$1"
    
    echo "üì¶ Translate Shell –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    
    case "$platform" in
        "macos")
            if command -v brew &> /dev/null; then
                brew install translate-shell
            else
                echo "‚ùå Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://brew.sh"
                return 1
            fi
            ;;
        "linux")
            if command -v apt-get &> /dev/null; then
                sudo apt-get update && sudo apt-get install -y translate-shell
            elif command -v yum &> /dev/null; then
                sudo yum install -y translate-shell
            elif command -v dnf &> /dev/null; then
                sudo dnf install -y translate-shell
            elif command -v pacman &> /dev/null; then
                sudo pacman -S translate-shell
            else
                # Fallback - –∫–æ–º–ø–∏–ª—è—Ü–∏—è –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤
                echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤..."
                local temp_dir=$(mktemp -d)
                cd "$temp_dir"
                git clone https://github.com/soimort/translate-shell.git
                cd translate-shell
                make && sudo make install
                cd - > /dev/null
                rm -rf "$temp_dir"
            fi
            ;;
        "windows")
            echo "ü™ü Windows: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏..."
            local temp_dir=$(mktemp -d)
            cd "$temp_dir"
            curl -L https://github.com/soimort/translate-shell/archive/develop.tar.gz | tar -xz
            cd translate-shell-develop
            make install PREFIX="$HOME/.local"
            cd - > /dev/null
            rm -rf "$temp_dir"
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
            export PATH="$HOME/.local/bin:$PATH"
            ;;
        *)
            echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $platform"
            return 1
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º/—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Translate Shell
PLATFORM=$(detect_platform)
if ! command -v trans &> /dev/null; then
    [ "$VERBOSE" ] && echo "üîç Translate Shell –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: $PLATFORM"
    
    if ! install_translate_shell "$PLATFORM"; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Translate Shell"
        echo "üí° –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:"
        case "$PLATFORM" in
            "macos") echo "   brew install translate-shell" ;;
            "linux") echo "   sudo apt install translate-shell  # –∏–ª–∏ –≤–∞—à –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä" ;;
            "windows") echo "   –°–∫–∞—á–∞–π—Ç–µ —Å https://github.com/soimort/translate-shell" ;;
        esac
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if ! command -v trans &> /dev/null; then
        echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
        exit 1
    fi
    
    echo "‚úÖ Translate Shell —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

# –ú–∞—Å—Å–∏–≤ –¥–ª—è –Ω–µ–ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
UNTRANSLATED=()

[ "$VERBOSE" ] && echo "üåê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —Ñ–∞–π–ª–∞: $LANG_FILE"
[ "$VERBOSE" ] && echo "üéØ –¶–µ–ª–µ–≤–æ–π —è–∑—ã–∫: $TARGET_LANG"
[ "$VERBOSE" ] && echo "üñ•Ô∏è  –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: $PLATFORM"

cp "$LANG_FILE" "${LANG_FILE}.backup"
TEMP_FILE=$(mktemp)
cp "$LANG_FILE" "$TEMP_FILE"

TOTAL_KEYS=0
TRANSLATED_KEYS=0
LINE_NUMBER=0

[ "$VERBOSE" ] && echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥..."

while IFS= read -r line; do
    LINE_NUMBER=$((LINE_NUMBER + 1))
    
    if echo "$line" | grep "\-\- TODO: translate" >/dev/null; then
        TOTAL_KEYS=$((TOTAL_KEYS + 1))
        
        russian_text=$(echo "$line" | sed 's/.*= "\(.*\)", -- TODO: translate/\1/')
        
        if [ -n "$russian_text" ] && [ "$russian_text" != "$line" ]; then
            [ "$VERBOSE" ] && echo "üìù –ü–µ—Ä–µ–≤–æ–¥–∏–º: $russian_text"
            # –û—Ç–ª–∞–¥–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–≤–æ–¥–∞
            [ "$VERBOSE" ] && echo "   üîß –ö–æ–º–∞–Ω–¥–∞: trans -brief "ru:${TARGET_LANG}" "$russian_text""            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º trans –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            translated_text=$(trans -brief "ru:${TARGET_LANG}" "$russian_text" 2>/dev/null)
            
            if [ $? -eq 0 ] && [ -n "$translated_text" ] && [ "$translated_text" != "$russian_text" ]; then
                # –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞
                if [[ "$PLATFORM" == "macos" ]]; then
                    sed -i '' "/${russian_text//\//\\/}/s/TODO: translate/Auto-translated/" "$TEMP_FILE"
                    sed -i '' "s|\"${russian_text//\//\\/}\"|\"${translated_text//\//\\/}\"|" "$TEMP_FILE"
                else
                    sed -i "/${russian_text//\//\\/}/s/TODO: translate/Auto-translated/" "$TEMP_FILE"
                    sed -i "s|\"${russian_text//\//\\/}\"|\"${translated_text//\//\\/}\"|" "$TEMP_FILE"
                fi
                
                TRANSLATED_KEYS=$((TRANSLATED_KEYS + 1))
                [ "$VERBOSE" ] && echo "   ‚úÖ ‚Üí $translated_text"
                sleep 0.2  # –ü–∞—É–∑–∞ –¥–ª—è API
            else
                UNTRANSLATED+=("–°—Ç—Ä–æ–∫–∞ $LINE_NUMBER: \"$russian_text\"")
                [ "$VERBOSE" ] && echo "   ‚ö†Ô∏è  –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –ø–æ–ª—É—á–µ–Ω"
            fi
        fi
    fi
done < "$LANG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ (–∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è)
if command -v luac &> /dev/null && luac -p "$TEMP_FILE" 2>/dev/null; then
    mv "$TEMP_FILE" "$LANG_FILE"
    rm -f "${LANG_FILE}.backup"
    
    echo "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo "üìä –í—Å–µ–≥–æ –∫–ª—é—á–µ–π: $TOTAL_KEYS"
    echo "üìä –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: $TRANSLATED_KEYS"
    echo "üìä –û—Å—Ç–∞–ª–æ—Å—å: $((TOTAL_KEYS - TRANSLATED_KEYS))"
    
    if [ ${#UNTRANSLATED[@]} -gt 0 ]; then
        echo ""
        echo "‚ö†Ô∏è  –ù–ï–ü–ï–†–ï–í–ï–î–ï–ù–ù–´–ï –°–¢–†–û–ö–ò:"
        for item in "${UNTRANSLATED[@]}"; do
            echo "   $item"
        done
        echo ""
        echo "üí° –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
        case "$PLATFORM" in
            "windows") echo "   notepad $LANG_FILE" ;;
            *) echo "   nano +–ù–û–ú–ï–†_–°–¢–†–û–ö–ò $LANG_FILE" ;;
        esac
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏–ª–∏ –ª—É–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backup..."
    mv "${LANG_FILE}.backup" "$LANG_FILE"
    rm -f "$TEMP_FILE"
    exit 1
fi
