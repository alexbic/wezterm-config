#!/bin/bash
# –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª–∏ —Å –ø–∞–∫–µ—Ç–Ω—ã–º –ø–µ—Ä–µ–≤–æ–¥–æ–º (–†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
show_progress() {
    local duration=$1
    local message="$2"
    echo -n "$message "
    for i in $(seq 1 $duration); do
        echo -n "."
        sleep 1
    done
    echo ""
}
SOURCE_FILE="$1"
TARGET_LANG="$2"
VERBOSE=""

for arg in "$@"; do
    case $arg in
        -v|--verbose) VERBOSE="true" ;;
    esac
done

if [ -z "$SOURCE_FILE" ] || [ -z "$TARGET_LANG" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <source_file> <target_lang> [-v]"
    exit 1
fi

if [ ! -f "$SOURCE_FILE" ]; then
    echo "‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $SOURCE_FILE"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è locale –∏ –Ω–∞–∑–≤–∞–Ω–∏–π
get_locale_for_language() {
    case "$1" in
        "en") echo "en_US.UTF-8" ;;
        "de") echo "de_DE.UTF-8" ;;
        "ru") echo "ru_RU.UTF-8" ;;
        "fr") echo "fr_FR.UTF-8" ;;
        *) echo "${1}_$(echo "$1" | tr '[:lower:]' '[:upper:]').UTF-8" ;;
    esac
}

get_language_name() {
    case "$1" in
        "en") echo "English" ;;
        "de") echo "German" ;;
        "ru") echo "–†—É—Å—Å–∫–∏–π" ;;
        "fr") echo "French" ;;
        *) echo "Unknown" ;;
    esac
}

SOURCE_DIR=$(dirname "$SOURCE_FILE")
NEW_FILE="$SOURCE_DIR/${TARGET_LANG}.lua"
TARGET_LOCALE=$(get_locale_for_language "$TARGET_LANG")
TARGET_NAME=$(get_language_name "$TARGET_LANG")

echo "üåê –°–æ–∑–¥–∞–Ω–∏–µ $TARGET_NAME –ª–æ–∫–∞–ª–∏"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–º–µ–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
cp "$SOURCE_FILE" "$NEW_FILE"
sed -i '' "s/ru_RU\.UTF-8/$TARGET_LOCALE/g" "$NEW_FILE"
sed -i '' "s/\"–†—É—Å—Å–∫–∏–π\"/\"$TARGET_NAME\"/g" "$NEW_FILE"
sed -i '' "s/-- –†—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è.*/-- $TARGET_NAME localization/" "$NEW_FILE"

# –î–æ–±–∞–≤–ª—è–µ–º TODO –º–∞—Ä–∫–µ—Ä—ã
sed -i '' 's/ = "\([^"]*[–∞-—è—ë][^"]*\)"/ = "\1", -- TODO:translate/gi' "$NEW_FILE"

# –°–ë–û–† –î–ê–ù–ù–´–• –î–õ–Ø –ü–ê–ö–ï–¢–ù–û–ì–û –ü–ï–†–ï–í–û–î–ê
KEYS=()
RUSSIAN_TEXTS=()

while IFS= read -r line; do
    if echo "$line" | grep "TODO:translate" >/dev/null; then
        key_name=$(echo "$line" | sed 's/^[[:space:]]*\([^[:space:]]*\) = .*/\1/')
        russian_text=$(echo "$line" | sed 's/.*= "\(.*\)" -- TODO:translate/\1/')
        
        if [ -n "$russian_text" ] && [ "$russian_text" != "$line" ]; then
            KEYS+=("$key_name")
            RUSSIAN_TEXTS+=("$russian_text")
        fi
    fi
done < "$NEW_FILE"

TOTAL_KEYS=${#KEYS[@]}
echo "üéØ –ù–∞–π–¥–µ–Ω–æ: $TOTAL_KEYS –∫–ª—é—á–µ–π"

if [ $TOTAL_KEYS -eq 0 ]; then
    echo "‚úÖ –ù–µ—Ç –∫–ª—é—á–µ–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞"
    exit 0
fi

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤
BATCH_INPUT=$(mktemp)
BATCH_OUTPUT=$(mktemp)

for russian_text in "${RUSSIAN_TEXTS[@]}"; do
    echo "$russian_text" >> "$BATCH_INPUT"
done

echo "üîÑ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ $TOTAL_KEYS —Å—Ç—Ä–æ–∫"
show_progress 3 "‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
# –í–´–ü–û–õ–ù–Ø–ï–ú –ü–ê–ö–ï–¢–ù–´–ô –ü–ï–†–ï–í–û–î
if gtimeout 120 trans -brief "ru:${TARGET_LANG}" -i "$BATCH_INPUT" > "$BATCH_OUTPUT" 2>/dev/null; then
    echo "‚úÖ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
    
    # –ß–ò–¢–ê–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–ï–†–ï–í–û–î–ê
    TRANSLATIONS=()
    while IFS= read -r line; do
        clean_line=$(echo "$line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | sed 's/,$//')
        TRANSLATIONS+=("$clean_line")
    done < "$BATCH_OUTPUT"
    
    # –ü–†–ò–ú–ï–ù–Ø–ï–ú –ü–ï–†–ï–í–û–î–´ –ö –§–ê–ô–õ–£ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    cp "$NEW_FILE" "${NEW_FILE}.backup"
    TRANSLATED_COUNT=0
    
    for i in "${!KEYS[@]}"; do
        if [ $i -lt ${#TRANSLATIONS[@]} ]; then
            russian_text="${RUSSIAN_TEXTS[$i]}"
            translated_text="${TRANSLATIONS[$i]}"
            
            if [ -n "$translated_text" ] && [ "$translated_text" != "$russian_text" ]; then
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º awk –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–º–µ–Ω—ã
                awk -v old="\"$russian_text\" -- TODO:translate" -v new="\"$translated_text\" -- Auto-translated" '{gsub(old,new)}1' "$NEW_FILE" > "${NEW_FILE}.tmp" && mv "${NEW_FILE}.tmp" "$NEW_FILE"
                TRANSLATED_COUNT=$((TRANSLATED_COUNT + 1))
            fi
        fi
    done
    
    echo "üìä –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: $TRANSLATED_COUNT/$TOTAL_KEYS"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞!"
    TRANSLATED_COUNT=0
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f "$BATCH_INPUT" "$BATCH_OUTPUT"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
if luac -p "$NEW_FILE" 2>/dev/null; then
    rm -f "${NEW_FILE}.backup"
    echo "‚úÖ $TARGET_NAME –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è: $NEW_FILE"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞!"
    mv "${NEW_FILE}.backup" "$NEW_FILE"
    exit 1
fi
