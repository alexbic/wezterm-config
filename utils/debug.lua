-- cat > ~/.config/wezterm/utils/debug.lua << 'EOF'
--
-- –û–ü–ò–°–ê–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
-- –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏—Ö –∏ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã
-- –ü–û–õ–ù–û–°–¢–¨–Æ –°–ê–ú–û–î–û–°–¢–ê–¢–û–ß–ù–´–ô –ú–û–î–£–õ–¨ - –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
--
-- –ó–ê–í–ò–°–ò–ú–û–°–¢–ò: –ù–ï–¢

local M = {}

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ª–∞–¥–∫–∏ (–≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ –º–æ–¥—É–ª—è–º)
M.DEBUG_CONFIG = {
  session_status = false,    -- –æ—Ç–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–π
  appearance = false,        -- –æ—Ç–ª–∞–¥–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
  resurrect = false,         -- –æ—Ç–ª–∞–¥–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
  workspace = false,         -- –æ—Ç–ª–∞–¥–∫–∞ workspace
  bindings = false,          -- –æ—Ç–ª–∞–¥–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
  global = false,            -- –æ–±—â–∞—è –æ—Ç–ª–∞–¥–∫–∞
}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ç–∞–±–ª–∏—Ü
local function table_to_string(tbl, indent, max_depth, current_depth)
  indent = indent or 0
  max_depth = max_depth or 3
  current_depth = current_depth or 0
  
  if current_depth >= max_depth then
    return "... (max depth reached)"
  end
  
  if type(tbl) ~= "table" then
    return tostring(tbl)
  end
  
  local result = ""
  local spaces = string.rep("  ", indent)
  
  for k, v in pairs(tbl) do
    if type(v) == "table" then
      result = result .. string.format("%s%s = {\n%s%s}\n", 
        spaces, tostring(k), 
        table_to_string(v, indent + 1, max_depth, current_depth + 1), 
        spaces)
    else
      result = result .. string.format("%s%s = %s\n", spaces, tostring(k), tostring(v))
    end
  end
  return result
end

M.table_to_string = table_to_string

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –º–æ–¥—É–ª—è
M.log_system = function(wezterm, t_func, message_key, ...)
  local localized_msg = t_func(message_key) or message_key
  local formatted_msg = string.format(localized_msg, ...)
  wezterm.log_info("ü™≤ " .. formatted_msg)
end

M.log = function(wezterm, t_func, module, message_key, ...)
  if M.DEBUG_CONFIG[module] then
    local localized_msg = t_func(message_key) or message_key
    local formatted_msg = string.format(localized_msg, ...)
    wezterm.log_info("ü™≤ [" .. module .. "] " .. formatted_msg)
  end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Ç–∞–±–ª–∏—Ü
M.log_table = function(wezterm, module, table_name, tbl)
  if M.DEBUG_CONFIG[module] then
    local table_str = table_to_string(tbl)
    wezterm.log_info("ü™≤ [" .. module .. "] TABLE " .. table_name .. ":\n" .. table_str)
  end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–æ–±—ã—Ç–∏–π
M.log_event = function(wezterm, module, event_name, ...)
  if M.DEBUG_CONFIG[module] then
    local args = {...}
    local args_str = ""
    for i, arg in ipairs(args) do
      if type(arg) == "table" then
        args_str = args_str .. "arg" .. i .. "=" .. table_to_string(arg, 0, 2) .. " "
      else
        args_str = args_str .. "arg" .. i .. "=" .. tostring(arg) .. " "
      end
    end
    wezterm.log_info("ü™≤ [" .. module .. "] EVENT " .. event_name .. " " .. args_str)
  end
end

-- –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –º–æ–¥—É–ª—è
M.enable_debug = function(wezterm, t_func, module)
  M.DEBUG_CONFIG[module] = true
  local msg = t_func("debug_enabled_for_module")
  wezterm.log_info("‚öôÔ∏è " .. string.format(msg, module))
end

-- –í—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –º–æ–¥—É–ª—è  
M.disable_debug = function(wezterm, t_func, module)
  M.DEBUG_CONFIG[module] = false
  local msg = t_func("debug_disabled_for_module")
  wezterm.log_info("‚öôÔ∏è " .. string.format(msg, module))
end

-- –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
M.enable_all = function(wezterm, t_func)
  for module, _ in pairs(M.DEBUG_CONFIG) do
    M.DEBUG_CONFIG[module] = true
  end
  local msg = t_func("debug_enabled_all")
  wezterm.log_info("‚öôÔ∏è " .. msg)
end

-- –í—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
M.disable_all = function(wezterm, t_func)
  for module, _ in pairs(M.DEBUG_CONFIG) do
    M.DEBUG_CONFIG[module] = false
  end
  local msg = t_func("debug_disabled_all")
  wezterm.log_info("‚öôÔ∏è " .. msg)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WezTerm —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
M.enable_verbose_logging = function(wezterm)
  wezterm.log_info("‚öôÔ∏è –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ WezTerm —Å:")
  wezterm.log_info("‚öôÔ∏è WEZTERM_LOG=info wezterm")
end

return M
